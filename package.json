{
  "scripts": {
    "dev-env:up": "docker compose up dev-db frontend backend",
    "dev-env:down": "docker compose down",
    "test-env:down": "docker compose down",
    "test-env:up": "docker compose --env-file .env.test up test-db frontend backend",
    "lint:back": "eslint backend/app/src/ --ext .ts",
    "lint:front": "eslint frontend/app/src/ --ext .js",
    "lint": "npm run lint:back ; npm run lint:front ; echo 'Do `npm run format`, if needed'",
    "format:back": "eslint backend/app/src/ --ext .ts --fix",
    "format:front": "eslint frontend/app/src/ --ext .js --fix",
    "format": "npm run format:back ; npm run format:front",
    "test:back": "cd backend/app/ && npm run test",
    "test": "npm run test:back",
    "cleanup:stop": "docker stop $(docker ps -qa);",
    "cleanup:containers": "docker rm $(docker ps -qa);",
    "cleanup:images": "docker rmi -f $(docker images -qa);",
    "cleanup:volumes": "docker volume rm $(docker volume ls -q);",
    "cleanup:network": "docker network rm $(docker network ls -q) 2>/dev/null;",
    "cleanup": "npm run cleanup:stop && npm run cleanup:containers && npm run cleanup:images && npm run cleanup:volumes && npm run cleanup:network",
    "prisma:studio": "docker exec backend npx prisma studio",
    "prisma:migrate": "docker exec -it backend npx prisma migrate dev",
    "prisma:reset": "docker exec -it backend npx prisma migrate reset -f",
    "dev:db:rm": "docker compose rm dev-db -s -f -v",
    "dev:db:up": "docker compose up dev-db -d",
    "db:dev:restart": "npm run dev:db:rm && npm run dev:db:up",
    "backend:rm": "docker compose rm backend -s -f -v",
    "backend:up": "docker compose up backend -d",
    "backend:restart": "npm run backend:rm && npm run backend:up",
    "test:db:rm": "docker compose rm test-db -s -f -v",
    "test:db:up": "docker compose up test-db -d",
    "test:db:restart": "npm run test:db:rm && npm run test:db:up",
    "prisma:reset:test": "docker exec -it backend npx dotenv -e .env.test -- prisma migrate reset -f",
    "backend:test:e2e": "npm run prisma:reset:test && docker exec -it backend npx dotenv -e .env.test -- npm run test:e2e",
    "prepare": "husky install"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^5.38.0",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^6.0.0",
    "eslint": "8.23.1",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.2.1",
    "husky": "^8.0.1"
  }
}
