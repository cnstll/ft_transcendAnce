// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id                String    @id @default(uuid())
  nickName          String    @unique()
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  userFriends       Friends[] @relation(name: "users")
  friendUserFriends Friends[] @relation(name: "friend_users")
}

///model Users {
///  id              String   @id @default(uuid())
///  nickName        String
///  friends         Users[]  @relation("friends")
///  friendsRelation Users[]  @relation("friends")
///  createdAt       DateTime @default(now())
///  updatedAt       DateTime @updatedAt
///}

model Friends {
  id        String   @id @default(uuid())
  user_id   String
  friend_id String
  user      Users    @relation(name: "users", fields: [user_id], references: [id])
  friend    Users    @relation(name: "friend_users", fields: [friend_id], references: [id])
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([user_id, friend_id])
}

model Matches {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ///  players   User[]
  score     Json     @default("{\"player1\" : 0, \"player2\" : 0}")
}

enum ChanelPrivilegeCode {
  ADMIN
  USER
  OWNER
}

enum FriendshipStatus {
  PENDING
  REQUESTED
  ACCEPTED
  REFUSED
}

enum ChannelType {
  PUBLIC
  PRIVATE
  PROTECTED
  DIRECTMESSAGE
}

enum UserStatus {
  ONLINE
  OFFLINE
  PLAYING
}
